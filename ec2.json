{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "An instance to run Puppet (WARNING: NOT IN FREE TIER, WILL COST MONEY)",
    "Parameters": {
        "VpcId" : {
            "Description" : "The VPC we are to launch our instance in",
            "Type" : "AWS::EC2::VPC::Id"
        },
        "ImageId": {
            "Description": "The AMI ID to use to launch the instance",
            "Type": "AWS::EC2::Image::Id",
            "Default" : "ami-ccecf5af"
        },
        "InstanceType": {
            "Description": "Type of the instance to launch",
            "Type": "String",
            "Default": "t2.medium"
        },
        "KeyName": {
            "Description": "Key pair to install by default",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SubnetId": {
            "Description": "The Id of the subnet the instance is going to be launched to",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "TrustedOrigin" : {
            "Type": "String",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Description": "Allow connections from this address (you should lock this down if you can)",
            "MaxLength": "18",
            "MinLength": "9"
        }
    },
    "Resources": {
        "Eip" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "InstanceId" : { "Ref" : "Instance" },
                "Domain" : "vpc"
            }
        },
        "Instance": {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : { "Ref": "ImageId" },
                "InstanceType" : { "Ref": "InstanceType" },
                "KeyName" : { "Ref": "KeyName" },
                "SubnetId" : { "Ref" : "SubnetId" },
                "SecurityGroupIds" : [ { "Ref" : "SecurityGroup" } ],
                "BlockDeviceMappings" : [
                    {
                        "DeviceName" : "/dev/sda1",
                        "Ebs" : { "VolumeSize" : "30" }
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : "puppet-master"
                    }
                ],
                "UserData" : {
                    "Fn::Base64" : {
                        "Fn::Join" : ["",
                            [
                                "#!/bin/bash\n",
                                "set -xeuo pipefail\n",
                                "yum -y update\n"
                            ]
                        ]
                    }
                }
            }
        },
        "SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH, ICMP, HTTP, HTTPS and 3000/TCP (Puppet)",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [
                    {
                        "CidrIp" : { "Ref" : "TrustedOrigin" },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp" : { "Ref" : "TrustedOrigin" },
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    },
                    {
                        "CidrIp" : { "Ref" : "TrustedOrigin" },
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp" : { "Ref" : "TrustedOrigin" },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp" : { "Ref" : "TrustedOrigin" },
                        "FromPort": "3000",
                        "IpProtocol": "tcp",
                        "ToPort": "3000"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "InstanceId": {
            "Description": "The Id of the created instance",
            "Value": { "Ref": "Instance" }
        },
        "AvailabilityZone": {
            "Description": "The availability zone the instance was launched into",
            "Value": { "Fn::GetAtt": [ "Instance", "AvailabilityZone" ] }
        },
        "PrivateDnsName": {
            "Description": "The private DNS name assigned to the instance",
            "Value": { "Fn::GetAtt": [ "Instance", "PrivateDnsName" ] }
        },
        "PublicDnsName": {
            "Description": "The public DNS name assigned to the instance",
            "Value": { "Fn::GetAtt": [ "Instance", "PublicDnsName" ] }
        },
        "PrivateIp": {
            "Description": "The private IP address assigned to the instance",
            "Value": { "Fn::GetAtt": [ "Instance", "PrivateIp" ] }
        }
    }
}
